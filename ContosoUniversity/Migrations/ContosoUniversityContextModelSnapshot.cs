// <auto-generated />
using ContosoUniversity.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace ContosoUniversity.Migrations
{
    [DbContext(typeof(ContosoUniversityContext))]
    partial class ContosoUniversityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CourseID");

                    b.Property<int>("Credits");

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CourseId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.CourseAssignment", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnName("CourseID");

                    b.Property<int>("InstructorId")
                        .HasColumnName("InstructorID");

                    b.HasKey("CourseId", "InstructorId");

                    b.HasIndex("InstructorId");

                    b.ToTable("CourseAssignment");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentID");

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<int>("InstructorId")
                        .HasColumnName("InstructorID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("DepartmentId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EnrollmentID");

                    b.Property<int>("CourseId")
                        .HasColumnName("CourseID");

                    b.Property<int?>("Grade");

                    b.Property<int>("StudentId")
                        .HasColumnName("StudentID");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnType("nchar(30)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("InstructorId");

                    b.ToTable("OfficeAssignment");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Course", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Entities.Department", "Department")
                        .WithMany("Course")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Course_Department");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.CourseAssignment", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Entities.Course", "Course")
                        .WithMany("CourseAssignment")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_CourseAssignment_Course");

                    b.HasOne("ContosoUniversity.Models.Entities.Instructor", "Instructor")
                        .WithMany("CourseAssignment")
                        .HasForeignKey("InstructorId")
                        .HasConstraintName("FK_CourseAssignment_Instructor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Department", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Entities.Instructor", "Instructor")
                        .WithMany("Department")
                        .HasForeignKey("InstructorId")
                        .HasConstraintName("FK_Department_Instructor");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.Enrollment", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Entities.Course", "Course")
                        .WithMany("Enrollment")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_Enrollment_Course");

                    b.HasOne("ContosoUniversity.Models.Entities.Student", "Student")
                        .WithMany("Enrollment")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Enrollment_Student");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Entities.OfficeAssignment", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Entities.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("ContosoUniversity.Models.Entities.OfficeAssignment", "InstructorId")
                        .HasConstraintName("FK_OfficeAssignment_Instructor");
                });
#pragma warning restore 612, 618
        }
    }
}
